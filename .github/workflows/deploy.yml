name: Deploy SilverBank

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend  # Gradle 프로젝트 위치

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Java 설정 (Gradle 사용)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3. Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      # 4. Gradle 빌드 (테스트 제외)
      - name: Build with Gradle
        run: |
          ./gradlew clean build -x test

      # 5. JAR 아티팩트 확인
      - name: Check JAR existence
        id: jar-check
        run: |
          if ls build/libs/*.jar 1> /dev/null 2>&1; then
            echo "JAR_EXISTS=true" >> $GITHUB_ENV
          else
            echo "JAR_EXISTS=false" >> $GITHUB_ENV
          fi

      # 6. JAR & 서비스 파일 배포
      - name: Deploy artifacts to EC2
        if: env.JAR_EXISTS == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: |
            backend/build/libs/*.jar
            .github/deploy/silverbank.service
          target: "/home/silverbank/app/"

      # 7. EC2에서 서비스 재시작
      - name: Restart SilverBank service
        if: env.JAR_EXISTS == 'true'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            sudo mv /home/silverbank/app/silverbank.service /etc/systemd/system/silverbank.service
            sudo systemctl daemon-reload
            sudo systemctl enable silverbank.service
            sudo systemctl restart silverbank.service
            sudo systemctl status silverbank.service --no-pager
